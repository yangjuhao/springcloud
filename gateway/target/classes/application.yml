server:
  port: 9527

eureka:
  client:
    #表示是否将自己注册进Eurekaserver默认为true。
    register-with-eureka: true
    #是否从EurekaServer抓取已有的注册信息，默认为true。单节点无所谓，集群必须设置为true才能配合ribbon使用负载均衡
    fetchRegistry: true
    service-url:
      defaultZone: http://localhost:7001/eureka # 单个注册中心
      #defaultZone: http://eureka7001.com:7001/eureka, http://eureka7002.com:7002/eureka # 注册中心集群
  instance:
    instance-id: gateway9527 # 在注册中心的别名
    prefer-ip-address: true # 显示IP地址

spring:
  application:
    name: gateway-service
  cloud:
    gateway:
      discovery:
        locator:
          enabled: true # 开启从注册中心创建路由的功能

      routes:
        - id: user_routh
          # 服务的url
          #uri: http://127.0.0.1:8001
          uri: lb://USER-SERVICE
          filters: # 过滤器
            - AddRequestHeader=X-Request-Id, dev  #在网关增加Header
            #- PrefixPath=/spring #在网关增加路径前缀，常用于服务项目配置全局路径
            #- RedirectTo=302,https://www.baidu.com # 重定向
            - StripPrefix=1 # 转发前去掉第一层
            #- SetStatus=404 # 改变状态码
          # 断言
          predicates:
            - Path=/get/user1/**,/get/user/**  # 配置路径
            #- After=2022-05-26T15:59:05.572+08:00[Asia/Shanghai] # 在当前时间之后
            #- Before=2022-05-26T14:59:05.572+08:00[Asia/Shanghai] # 在当前时间之前
            #- Between=2022-05-01T15:59:05.572+08:00[Asia/Shanghai], 2022-05-30T14:59:05.572+08:00[Asia/Shanghai] # 时间区间
            #- Cookie=user, 1[3-9]\d{9}   # cookie的断言，接收两个参数，cookie名字和一个正则表达式  请求方式 curl http://127.0.0.1:9527/user1/get --cookie "cookie=13470800699"
            #- Header=X-Request-Id, \d+ # Header的断言 接收两个参数，标题名称和一个正则表达式 请求方式 curl http://127.0.0.1:9527/user1/get -H "X-Request-Id:88"
            - Method=GET,POST # 接收一个参数，判断请求类型是否跟指定的类型匹配
            #- Query=user,\d+ # 接收两个参数，请求param和正则表达式
            #- Query=user # 接收一个参数，请求param




